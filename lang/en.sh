# ============================================
# WaveScan - Language pt-BR file [code: en]
# ============================================

# wave.sh
WAVE_CHECK_FOR_DOMAIN="Starting domain analysis:"
WAVE_INSTALL_WARNING="Warning: This process will install various libraries and tools on your system. If you are using a distribution other than Debian or Ubuntu, some components may need to be compiled to ensure compatibility, which may increase installation time. After completion, WaveScan will proceed with the domain analysis:"
WAVE_CONTINUE_PROMPT="Do you want to proceed with the installation? (y/n)"
WAVE_CHECKING_TOOLS="Checking dependencies and tools required for WaveScan."
WAVE_PORT_SCAN="Phase: Scanning the 100 most common ports."
WAVE_ADVANCED_SCAN="Phase: Full port scan."
WAVE_UDP_SCAN="Phase: UDP port scan."
WAVE_PORT_GET="Phase: Confirmation of detected ports."
WAVE_SERVICE_SCAN="Phase: Identification of running services."
WAVE_CONNECT_SCAN="Phase: Checking active connections."
WAVE_HEADERS_SCAN="Phase: HTTP headers analysis."
WAVE_WAF_SCAN="Phase: Web Application Firewall (WAF) detection."
WAVE_TECH_SCAN="Phase: Identification of technologies used."
WAVE_HTTP_SCAN="Phase: Verification of supported HTTP methods."
WAVE_SOURCE_SCAN="Phase: Page source code analysis."
WAVE_CSS_SCAN="Phase: CSS files analysis."
WAVE_FTP_SCAN="Phase: FTP services check."
WAVE_PATH_SCAN="Phase: Search for accessible paths."
WAVE_DIRECTORY_SCAN="Phase: Directory enumeration."
WAVE_FILE_SCAN="Phase: Search for exposed files."
WAVE_INDEXOF_SCAN="Phase: Search for exposed 'Index of' directories."
WAVE_LFD_SCAN="Phase: Search for Local File Disclosure (LFD) vulnerabilities."
WAVE_WEB_SCAN="Phase: Scanning ports associated with web services."
WAVE_VUL_SCAN="Phase: Checking for known vulnerabilities."
WAVE_FRAME_SCAN="Phase: Analysis of present iframes."
WAVE_SQL_SCAN="Phase: Testing for SQL vulnerabilities."
WAVE_FINAL_SUMMARY_REPORT="Generating the consolidated final report."
WAVE_SCAN_COMPLETED_SUCCESS="Scan completed for the domain:"
WAVE_SCAN_COMPLETED_FINISH="finished successfully."
WAVE_RESULTS_AVAILABLE_AT="Scan results available at:"
WAVE_TEXT_REPORTS_AT="  - Text reports:"
WAVE_IMAGES_AT="  - Generated images:"
WAVE_FINAL_SUMMARY_AT="  - Final summary:"

# config.sh
CONFIG_NORMAL_MODE="normal mode"
CONFIG_FAST_MODE="fast mode"
CONFIG_DEV_MODE="development mode"
CONFIG_DEBUG_MODE="Warning: Debug mode enabled"
ON="on"
IN="in"

# global
SAVED_RESULT="Result saved in:"
NONE_FOUND="None found"
AMOUNT="Total"
DIRECTORY="Directory"
FINISHED="Task completed"
SCAN_MADE_ON_DATE="Analysis performed on"
CREATEFILE_NOTFOUND="createFile function not found. Log file not created"
FAILED_TO_CONNECT="Failed to connect"

# src_core.sh
CORE_DISCLAIMER="\n==== LEGAL NOTICE - RESPONSIBLE USE OF WAVESCAN ====\nWaveScan was developed exclusively for educational purposes, authorized security testing, and network administration under your responsibility. Using this script against systems, networks, or devices without explicit permission is strictly prohibited and constitutes a legal violation. The authors and maintainers are not responsible for any misuse or damages resulting from its execution. By using WaveScan, you fully acknowledge and accept these terms. This script facilitates the collection of OSINT information about domains, IPs, and servers. Contributions are welcome. Use it ethically and responsibly. For testing, we recommend the domain scanme.nmap.org."
CORE_DISCLAIMER_IP="\nNote: WaveScan will be executed using the following IP address:"
CORE_DISCLAIMER_IP_FINAL="We recommend using a Tor connection or VPN during scan execution."
CORE_DISCLAIMER_FINAL="\nWarning: Avoid performing scans at short intervals on the same target to prevent network blocks."
CORE_INFO_INSTALL="Warning: We strongly recommend that before running WaveScan install all packages using -i at the end of the command."
CORE_UPDATE_FOUND="A new WaveScan update has been detected."
CORE_NEW_VERSION_IS="New version of WaveScan is:"
CORE_GET_UPDATE="Starting the update download."
CORE_FILES_UPDATED="All files have been successfully updated."
CORE_UPDATE_FAIL="Failed to update files. We recommend manually updating by downloading the files directly from the repository at:"
CORE_VERSION_NOT_FOUND="Unable to verify the available version."
CORE_GITDIR_FOUND="Git directory detected. Starting file download."
CORE_DOWNLOADING_FILES="File download in progress."
CORE_FAILED_TEMP_DIR="Error creating temporary directory."
CORE_INSTALL_RUBY="Starting Ruby installation."
CORE_INSTALLED_RUBY="Ruby installation completed successfully."
CORE_INSTALL_WAFW00F="Starting installation of WAFW00F and WFuzz tools."
CORE_INSTALLED_WAFW00F="Installation of WAFW00F and WFuzz tools completed successfully."
CORE_INSTALL_HYDRA="Starting Hydra installation."
CORE_INSTALLED_HYDRA="Hydra installation completed successfully."
CORE_INSTALL_GOBUSTER="Starting GoBuster installation."
CORE_INSTALLED_GOBUSTER="GoBuster installation completed successfully."
CORE_INSTALL_FFUF="Starting FFUF installation."
CORE_INSTALLED_FFUF="FFUF installation completed successfully."
CORE_INSTALL_DIRB="Starting Dirb installation."
CORE_INSTALLED_DIRB="Dirb installation completed successfully."
CORE_INSTALL_WHATWEB="Starting WhatWeb installation."
CORE_INSTALLED_WHATWEB="WhatWeb installation completed successfully."
CORE_INSTALL_SQLMAP="Starting sqlmap installation."
CORE_INFO_SQLMAP="If you encounter issues running sqlmap, please create the symbolic link with the command: sudo ln -s /usr/bin/python3 /usr/bin/python"
CORE_INSTALLED_SQLMAP="sqlmap installation completed successfully."
CORE_CLEANUP_TEMP="Removing temporary files."
CORE_TOOLS_INSTALLED="All security tools have been successfully installed."
CORE_INSTALLING_PKG="Starting installation of required packages."
CORE_UNKNOW_OS="Unrecognized operating system family."
CORE_PKG_BE_INSTALLED="The following packages are about to be installed:"
CORE_PKG_INSTALLED="Packages installed successfully."
CORE_INSTALL_FOR_MACOS="Starting installation of security tools for macOS."
CORE_INSTALL_HOMEBREW="Homebrew not found. Please install Homebrew before proceeding."
CORE_VISIT_HOMEBREW="Visit https://brew.sh for Homebrew installation instructions."
CORE_CLONE_IMPERSONATE="Cloning the curl-impersonate repository."
CORE_CURL_IMPERSONATE_INSTALLED="Curl impersonate installed."
CORE_SPECIFY_DOMAIN="A domain must be specified as a parameter."
CORE_USAGE="Usage syntax:"
CORE_DOMAIN_OR_IP="example.com or 192.168.0.1"
CORE_STARTING_WAIT="Starting WaveScan. Please wait."
CORE_INVALID_DOMAIN_IP="The provided domain or IP is invalid."
CORE_TESTING_DOMAIN_NO_WWW="Checking the domain without 'www'."
CORE_TESTING_DOMAIN_WITH_WWW="Checking the domain with 'www'."
CORE_USING_VERSION_NO_WWW="Adopting the domain version without 'www'."
CORE_USING_VERSION_WITH_WWW="Adopting the domain version with 'www'."
CORE_DOMAIN_OR_IP_INACCESSIBLE="The domain or IP is inaccessible."
CORE_TESTING_DOMAIN_WITH_SSL="Checking HTTPS protocol support."
CORE_USING_DOMAIN_WITH_SSL="HTTPS connection confirmed."
CORE_TESTING_DOMAIN_NO_SSL="Checking HTTP protocol support."
CORE_USING_DOMAIN_NO_SSL="HTTP connection confirmed."
CORE_UNKNOWN_CHARACTER="Unsupported characters detected. Performing removal."
CORE_VERSION_TITLE="WaveScan version:"
CORE_TITLE_REMOTE="Remote"
CORE_TITLE_LOCAL="Local"
CORE_SCRIPT_DIRECTORY="Execution directory:"
CORE_NO_DOMAIN_OR_IP_PROVIDED="No domain or IP was specified."
CORE_VALID_IP_DETECTED="Valid IP identified."
CORE_SCAN_START_MESSAGE="Starting scan for:"
CORE_DOWNLOADING_SECLIST="Downloading SecLists for:"
CORE_DOWNLOADING_SECLIST_INFO="The download may take a few minutes due to the size of the lists."
CORE_INSTALLED_SECLIST="SecLists configured successfully."
CORE_CREATING_DEV_LIST="Generating the development list with initial entries."
CORE_DEV_LIST_CREATED="Development list created successfully."
CORE_FAILED_CREATE_DEV_LIST="Error creating the development list."
CORE_DIRECTORY_CREATED="Directory created successfully."
CORE_FAILED_TO_CREATE="Error creating directory:"
CORE_GENERATING_VISUAL_REPORT="Generating visual report for:"
CORE_IMAGE_SUCCESSFULLY_GENERATED="Report image generated successfully."
CORE_FAILED_TO_GENERATE_IMAGE="Error generating report image."
CORE_EMPTY_OR_MISSING_FILE="The file is empty or not found."
CORE_HOMEBREW_NOT_INSTALLED="Homebrew not detected. Package installation cannot proceed."
CORE_PKG_INSTALL_NOT_SUPPORTED="Package installation is not supported for:"
CORE_FAILED_PKGS="Error installing the following packages:"
CORE_CONTINUE_INSTALL_PKG="Attempting to continue installation in progress."
CORE_DIRECTORY_EXIST="The scan directory at"
CORE_DIRECTORY_CONTINUE="already exists. Do you want to proceed?"
CORE_SCAN_ABORT="Canceling scan for:"

# src_scan.sh
SCAN_START_TOP100="Starting the scan of the 100 most common ports."
SCAN_STEALTH_MODE="Stealth mode enabled: using 20 fake IPs with the decoy technique (Nmap -D RND:20)."
SCAN_RESULT_NORMAL="Normal scan results:"
SCAN_NO_OPEN_PORTS_TOP100="No open ports detected among the 100 most common."
SCAN_TOP100_TITLE="Scan of the 100 Most Common Ports"
SCAN_WARNING_TRAFFIC_CPU="Warning: This scan may generate heavy traffic and high CPU usage."
SCAN_LOCAL_NETWORK_WARNING="Note: In local networks, results may be limited. Consecutive runs may produce false positives or negatives."
SCAN_CLOUD_RECOMMENDATION="We recommend running the scan in a cloud environment for greater effectiveness."
SCAN_RESULT_ADVANCED="Advanced scan results:"
SCAN_NO_OPEN_PORTS_ADVANCED="No open ports identified on the target."
SCAN_ALLPORTS_TITLE="Full Port Scan"
SCAN_OPEN_PORTS_LIST="List of detected open ports:"
SCAN_PORT_EXTRACTION_FAIL="Error extracting ports from scan results."
SCAN_NO_OPEN_PORTS_BOTH="No open ports found in the scans performed."
SCAN_CHECKING_SERVICE_VERSIONS="Analyzing service versions on open ports. This process may take time due to the number of ports."
SCAN_SERVICE_RESULT_FOR="Service analysis results for open ports on:"
SCAN_NO_SERVICES_FOUND="No active services identified on open ports."
SCAN_SERVICES_FILE_TITLE="Detected Service Versions"
SCAN_NO_PORT_LIST_FILE="Port list file not found."
SCAN_TESTING_CONN="Testing connectivity on open ports."
SCAN_CONN_RESULT_FOR="Connectivity test results for open ports on:"
SCAN_PORT="Port:"
SCAN_YES_CONN="Connection successful"
SCAN_NO_CONN="No connectivity"
SCAN_CONN_TITLE="Port Connectivity Test"
SCAN_NO_PORTS_TO_CHECK_HEADERS="No ports available for HTTP header analysis."
SCAN_CHECKING_HEADERS="Analyzing HTTP headers on open ports of the domain:"
SCAN_HEADER_RESULT="HTTP header analysis results for open ports on:"
SCAN_HEADER_FOR_PORT="HTTP headers for port:"
SCAN_NO_HEADER="No HTTP headers returned by port:"
SCAN_SAVED_TITLE="Captured HTTP Headers"
SCAN_VULN_START="Starting vulnerability analysis on ports:"
SCAN_UDP_FAILED="Error during advanced UDP scan."
SCAN_START_UDP="Starting UDP scan of the 100 most common ports."
SCAN_RESULT_UDP="UDP scan results:"
SCAN_NO_OPEN_UDP_PORTS="No open UDP ports detected."
SCAN_UDP_TITLE="UDP Port Scan"
SCAN_VULN_RESULT="Vulnerability analysis results for:"
SCAN_VULNERABILITIES_FOUND="Identified vulnerabilities:"
SCAN_NO_VULNERABILITIES_FOUND="No vulnerabilities detected."
SCAN_VULN_TITLE="Vulnerability Analysis"
SCAN_WEB_START="Starting web service scan on ports 80, 443, 8080, and 8443. This process may take time."
SCAN_WEB_SERVICES_FOUND="Detected web services:"
SCAN_WEB_RESULT="Web service scan results for:"
SCAN_WEB_FAILED="Error during web service scan."
SCAN_NO_WEB_SERVICES="No web services identified."
SCAN_WEB_TITLE="Web Service Scan"

# src_frame
IFRAME_TITLE="Iframe Analysis"
IFRAME_CHECKING="Checking for the presence of iframes in the domain:"
IFRAME_DETECTED="Iframe identified with the src attribute:"
IFRAME_APPEND="The next checks will be performed on the following address:"
IFRAME_NOT_FOUND="No iframes detected on the page."
IFRAME_RESULT="Iframe analysis results for:"
IFRAME_MULTIPLE_FOUND="Warning: Multiple iframes were identified on the page."
IFRAME_CHOSE_IFRAME="Select the iframe you want to analyze:"
IFRAME_CHOOSE_NUMBER="Enter the number corresponding to the iframe: "
IFRAME_INVALID_NUMBER="Invalid selection. Could not identify the chosen iframe."
IFRAME_NEW_CHECK="New checks will be performed on the address:"
IFRAME_SELECTED="Iframe selected for analysis:"

# src_waf.sh
WAF_SCAN="Starting Web Application Firewall (WAF) detection on the domain:"
WAF_CANT_CHECK="Warning: Unable to identify the WAF using the wafw00f tool. Attempting manual header inspection."
WAF_RESULT_FOR="WAF detection results for:"
WAF_NOT_DETECTED="No WAF detected on the domain:"
WAF_CANNOT_DETERMINE="Unable to determine the presence of a WAF on the domain:"
WAF_DETECTED="WAF identified on the domain:"
WAF_DETECTION="Web Application Firewall Detection"

# src_tech.sh
TECH_SCAN="Starting analysis of technologies used on the site:"
TECH_RESULT_FOR="Technology analysis results for:"
TECH_CANNOT_IDENTIFY="Unable to identify technologies used."
TECH_DETECTED="Identified technologies"

# src_http.sh
HTTP_CHECK="Analyzing allowed HTTP methods on the domain:"
HTTP_RESULT="HTTP method analysis results for:"
HTTP_STATUS_FAIL="Unable to determine the HTTP status of the response."
HTTP_ALLOW_HEADER="Allow header:"
HTTP_NO_METHODS="No HTTP methods detected or 'Allow' header not found."
HTTP_ALLOWED_METHODS="Allowed HTTP methods:"
HTTP_METHODS="HTTP Method Analysis"

# src_source.sh
SRC_ANALYSIS="Starting source code analysis to identify resources:"
SRC_FAIL="Error retrieving the website's source code."
SRC_RESULT="Source code analysis results for:"
SRC_JS_FILES="Identified JavaScript files:"
SRC_JS_PATHS="Local paths of JavaScript files:"
SRC_CSS_FILES="Identified CSS files:"
SRC_CSS_PATHS="Local paths of CSS files:"
SRC_IMG_FILES="Identified image files:"
SRC_IMG_PATHS="Local paths of image files:"
SRC_TITLE="Source Code Analysis"

# src_css.sh
CSS_TITLE="CSS File Analysis"
CSS_ANALYSIS="Starting analysis of CSS files to identify resources:"
CSS_NOT_FOUND="No CSS files identified on the page."
CSS_DIRECTORIES_FOUND="Resource directories identified in:"
CSS_HTML_FAIL="Error retrieving the page's source code."
CSS_HTTPS_FAILED="HTTPS connection failed. Attempting HTTP as an alternative."
CSS_DOWNLOADING_MAIN_PAGE="Retrieving the source code of the main page:"
CSS_TRYING_ALT_METHODS="Exploring alternative methods to locate CSS files."
CSS_TRYING_WWW_PREFIX="Attempting access with the 'www' prefix."
CSS_WWW_SUCCESS="Connection successful using the 'www' prefix."
CSS_HTML_DOWNLOAD_FAILED="Unable to retrieve HTML source code. Attempting to locate CSS files directly."
CSS_FILE_FOUND="CSS file identified:"
CSS_FILES_NOT_FOUND="No CSS files located. Terminating analysis."
CSS_SEARCHING_IN="Searching for CSS files on the domain:"
CSS_STYLESHEET_LINKS="stylesheet links"
CSS_FOUND="Identified:"
CSS_ANALIZY_RESULT="CSS file analysis results for:"
CSS_PATH_RESULT="Identified CSS file paths:"
CSS_DIRECTORY_REFER="Analyzing directories referenced in CSS files:"
CSS_SOURCE_FIND="Searching for CSS files directly in the source code."
CSS_NO_FILES_FOUND="No CSS files found. Terminating analysis."
CSS_FILES_FOUND="identified CSS files"
CSS_NO_DIRECTORY_FOUND="No directory identified in the CSS file:"
CSS_NONE_DIRECTORY_FOUND="No resource directories identified."
CSS_WAIT_PROCESSING="Processing CSS files. Please wait..."
CSS_DOWNLOADING_FILES="Retrieving CSS file:"
CSS_ANALYSIS_DONE="CSS file analysis completed. Results saved in:"

# src_path.sh
PATH_ANALYSIS="Starting source code analysis to identify potential attack vectors:"
PATH_FAIL="Error retrieving the website's source code."
PATH_RESULT="Results of potential attack vector analysis for:"
PATH_GET_URLS="URLs with GET parameters (potential for SQL injection):"
PATH_PHP_FORM="Detected forms (potential for SQL injection via POST):"
PATH_PHP_FILES="Identified PHP files:"
PATH_JS_ENDPOINTS="Endpoints identified in JavaScript files:"
PATH_API_ENDPOINTS="Possible API endpoints identified:"
PATH_GRAPHQL="GraphQL endpoints (potential for introspection attacks):"
PATH_FILE_UPLOADS="File upload forms (potential for remote code execution):"
PATH_WEBSOCKETS="Identified WebSocket connections:"
PATH_AUTH_TOKENS="Detected authentication token patterns:"
PATH_CMS_DETECTED="Detected content management systems (CMS):"
PATH_SENSITIVE_EXT="URLs with sensitive extensions (ASP, JSP, CGI, etc.):"
PATH_COMMON_PARAMS="Common parameters identified in URLs:"
PATH_OPEN_REDIRECT="Potential open redirect points:"
PATH_FILE_INCLUSION="Possible file inclusions (LFI/RFI):"
PATH_API_REPEAT="Confirmed API endpoints:"
PATH_HIGH_RISK="Warning: High-risk points for injection testing:"
PATH_NO_RISK_FOUND="No high-risk patterns identified."
PATH_TITLE="Analysis of Potential Attack Vectors"
PATH_NO_CMS="No content management system (CMS) detected."

# src_ftp.sh
FTP_NO_PORT_FOUND="No default FTP ports (21, 22) open. Starting scan for FTP/SFTP services."
FTP_SERVICE_FOUND="FTP/SFTP service identified on port:"
FTP_SCAN_FINISHED="(scan of ports 21, 22, and additional ports completed)"
FTP_ON_PORT="on port:"
FTP_CHECK="Starting FTP service check on the domain:"
FTP_RESULT="FTP check results for:"
FTP_PORT_OPEN="FTP port (21) open on:"
FTP_PORT_CLOSED="FTP port (21) closed or inaccessible on:"
FTP_CONNECTION_OK="FTP connection successfully established on:"
FTP_CONNECTION_SUCCESS="successful connection"
FTP_CONNECTION_FAIL="FTP connection failed on:"
FTP_BRUTE_FORCE_TEST="Simulating brute force test on the FTP service on port:"
FTP_HARDENED="FTP service protection:"
FTP_HARDENED_STATUS="protected"
FTP_VULNERABLE_STATUS="vulnerable"
FTP_BRUTE_STATUS="Warning: This FTP server may be susceptible to brute force attacks."
FTP_TITLE="FTP Service Check"
FTP_CONNECTION="FTP Connection"
FTP_PROTECTION_STATUS="FTP Service Protection Status"

# src_dir.sh
ENUM_STARTING_DIRECTORY_ENUMERATION="Starting directory enumeration on the domain:"
ENUM_PROCESS_MAY_TAKE_TIME="This process may take time due to the size of the wordlist."
ENUM_ATTEMPTING_ENUMERATION_VIA_PROTOCOL="Starting directory enumeration at the address:"
ENUM_FAILED_OR_NO_RESULTS="Directory enumeration failed or no results found."
ENUM_COMPLETED_FILE_SAVED="Directory enumeration completed. Results saved in:"
ENUM_RESULTS_DIRECTORY_ENUMERATION="Directory enumeration results for:"
ENUM_TOTAL_URLS_CHECKED="Total URLs analyzed:"
ENUM_URLS_WITH_STATUS_200="URLs with HTTP status 200 (OK):"
ENUM_DIRECTORIES_FILES_FOUND_STATUS_200="Directories and files found with HTTP status 200:"
ENUM_DISPLAYING_FIRST_20_RESULTS="Displaying the first 20 results out of a total of:"
ENUM_DISPLAYING_FIRST_20_MORE="Check the full file for additional details."
ENUM_NO_DIRECTORIES_FOUND_STATUS_200="No directories or files with HTTP status 200 found."
ENUM_COMPLETE_DIRECTORY_LIST_AVAILABLE="The complete directory list is available at:"
ENUM_DIRECTORIES_FOUND="Directory Enumeration"

# src_files.sh
FILES_START="Starting the search for specific files on the domain:"
FILES_USING_METHOD="Performing file search at the address:"
FILES_CONN_FAIL="Connection failed to the address:"
FILES_TRY_NEXT="Trying the next protocol."
FILES_FAKE_SIZE="Fake response size identified:"
FILES_LONG_PROCESS="This process may take time due to the volume of checks."
FILES_GOBUSTER_ERROR="Error running Gobuster for the address:"
FILES_TRYING_NEXT="Trying the next available protocol..."
FILES_FOUND="Files found:"
FILES_FOUND_NAMES="file(s)"
FILES_NOT_FOUND="No files located."
FILES_RESULT_EMPTY="No file search results identified."
FILES_TITLE="File Search"
FILES_RESULT="File search results for:"

# src_index.sh
INDEX_START="Starting search for 'Index of' directories at"
INDEX_LONG_PROCESS="This process may take a while, go water your plants 🌱"
INDEX_USING_METHOD="Attempting 'Index of' directory search via"
INDEX_CONN_FAIL="Connection failed via"
INDEX_TRY_NEXT="Trying the next protocol"
INDEX_FAKE_SIZE="Fake response size detected"
INDEX_RESULT="Results for 'Index of' check for"
INDEX_NONE_FOUND="No sensitive directories or files found via"
INDEX_JSON_MISSING="JSON file not found or empty for"
INDEX_TITLE="Directories and Files"
INDEX_POSSIBLE_OPEN="possibly open"
INDEX_FOUND="Index of found"
INDEX_DIRECTORY_NOT_INDEX="Not an indexable directory"
INDEX_AMOUNT_DIRECTORY="Total real indexable items"

# src_fuzz.sh
FUZZ_START_LFD="Starting Local File Disclosure (LFD) check on:"
FUZZ_FILES="files"
FUZZ_URLS="URLs selected for testing:"
FUZZ_LONG_PROCESS="This process may take time due to the volume of tests."
FUZZ_TESTING="Running fuzzing tests with wfuzz on:"
FUZZ_RESULT="Fuzzing check results for:"
FUZZ_NO_RESULT="No fuzzing results identified for:"
FUZZ_TITLE="Fuzzing Check"
FUZZ_CODE_EXPOSE="Source code exposure check results for:"
FUZZ_CODE_EXPOSE_TITLE="Source Code Exposure Check"
FUZZ_NOCODE_EXPOSE="No source code exposure identified for:"
FUZZ_START_PATH_TRAVERSAL="Starting Path Traversal vulnerability check on:"
FUZZ_FILTER="(showing only positive results)"
FUZZ_PATH_TRAVERSAL_DETECTED="Possible Path Traversal vulnerability detected:"
FUZZ_PATH_TRAVERSAL_RESULT="Path Traversal check results for:"
FUZZ_NO_PATH_TRAVERSAL="No Path Traversal results identified for:"
FUZZ_PATH_TRAVERSAL_TITLE="Path Traversal Check"

# summary.sh
SUM_GENERATING="Generating summary report of all checks"
SUM_TITLE="SECURITY SUMMARY FOR"
SUM_DATE="Analysis date"
SUM_OPEN_PORTS="Open ports"
SUM_NO_OPEN_PORTS="No open ports identified"
SUM_SERVICES="Identified services"
SUM_VERSION_LIST="Service names"
SUM_CONNECTED_PORTS="Total successfully connected ports"
SUM_NO_CONNECTED_PORTS="Connection could not be established"
SUM_HTTP_HEADERS="Identified HTTP headers"
SUM_WAF_DETECTED="WAF identified"
SUM_HTTP_METHODS="Allowed HTTP methods"
SUM_JS_FOUND="Located JS files"
SUM_SOURCE_RESOURCES="Resources in source code"
SUM_HIGH_RISK="WARNING: High-risk points"
SUM_ATTACK_VECTORS="Possible attack vectors detected"
SUM_FTP_CHECK="FTP brute force check"
SUM_FILES_200="Accessible directories/files (status 200)"
SUM_SENSITIVE_FILES="Located sensitive files"
SUM_INDEX_OF="Found 'Index of' directories"
SUM_POSSIBLE_VULNERABILITIES="POSSIBLE VULNERABILITIES"
SUM_DANGEROUS_METHODS="Potentially dangerous HTTP methods allowed (PUT/DELETE)"
SUM_ACCEPTS_BRUTEFORCE="accepts brute force attacks"
SUM_FTP_VULNERABLE="FTP server vulnerable to brute force attacks"
SUM_NO_WAF="No Web Application Firewall (WAF) detected"
SUM_HIGH_RISK_POINTS="High-risk points detected"
SUM_POSSIBLE_VUL="possible vulnerabilities"
SUM_SENSITIVE_PATHS="Detected accessible sensitive directories/files"
SUM_NO_VULNERABILITIES="No obvious vulnerabilities detected in basic checks"
SUM_TOTAL_VULNERABILITIES="Total possible vulnerabilities detected"
SUM_END="END OF REPORT"
SUM_SAVED="Summary report saved at"
SUM_ANALYSIS_SUMMARY="Analysis Summary"
SUM_TECHS="Identified technologies"
SUM_REPORT_LOCATION="All report files are located at"

# sql.sh
SQL_COLLECTING_URLS="Collecting .php URLs with parameters from"
SQL_NO_URLS_FOUND="No .php URLs with parameters found in"
SQL_FOUND_URLS=".php URLs with parameters found:"
SQL_TESTING_PAYLOADS="Testing parameter behavior with a simple payload for use in sqlmap"
SQL_TESTING_URL="Testing:"
SQL_VULNERABLE_URL="Potential SQLi detected:"
SQL_URL_NOT_VULNERABLE="does not appear vulnerable"
SQL_STARTING_SQLMAP="Starting automated analysis with sqlmap on detected URLs"
SQL_RUNNING_SQLMAP="Running sqlmap to retrieve the database:"
SQL_RUNNING_SQLMAP_INFO="This process may take a while, go watch a YouTube video."
SQL_DB_IDENTIFIED="Database identified:"
SQL_DB_NOT_IDENTIFIED="Database not identified. Skipping..."
SQL_LISTING_TABLES="Listing tables in the database"
SQL_TABLES_FOUND="Tables found:"
SQL_NO_TABLES_FOUND="No tables found."
SQL_DUMPING_DB="Performing a full database dump"
SQL_DUMP_DONE="A database dump has been performed:"
SQL_DB_NAME="Name:"
SQL_DB_ESTIMATED_SIZE="Estimated size:"
SQL_DB_TECHNOLOGY="Technology:"
SQL_FINISH_EXECUTION="Execution completed. Full results in:"
SQL_CHECK_INJECT_RESULT="Result for Inject vulnerability detection"
SQL_DATABASE="Database"
SQL_TABLES="Tables"
SQL_SIZE="Size"
SQL_TEC="Technology"